// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-outside-of-docker
{
	"name": "Pelican Prod Environment",
	// Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
	"image": "mcr.microsoft.com/devcontainers/base:bullseye",
	"onCreateCommand": "helm plugin install https://github.com/databus23/helm-diff --version=3.9.6 && helm plugin install https://github.com/aslafy-z/helm-git --version 1.3.0",
	"features": {
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1.4.5": {
			"version": "20.10",
			"enableNonRootDocker": "true",
			"moby": "true"
		},
		"ghcr.io/devcontainers/features/git:1.2.0": {
			"ppa": true,
			"version": "os-provided"
		},
		"ghcr.io/devcontainers/features/kubectl-helm-minikube:1.1.9": {
			"version": "1.31.2",
			"helm": "3.16.2",
			"minikube": "none"
		},
		"ghcr.io/mpriscella/features/kind:1.0.1": {
			"version": "v0.23.0"
		},
		"ghcr.io/schlich/devcontainer-features/helmfile:1.0.0": {
			"version": "v0.164.0"
		}
	},
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
		
		"PELICAN_PROD_UI_HOSTNAME": "${localEnv:PELICAN_PROD_UI_HOSTNAME}",
		"PELICAN_PROD_UI_BASE_EXTERNAL_URL": "${localEnv:PELICAN_PROD_UI_BASE_EXTERNAL_URL}",
		"PELICAN_PROD_CMS_HOSTNAME": "${localEnv:PELICAN_PROD_CMS_HOSTNAME}",
		"PELICAN_PROD_CMS_BASE_EXTERNAL_URL": "${localEnv:PELICAN_PROD_CMS_BASE_EXTERNAL_URL}",

		"PELICAN_PROD_AWS_ACCESS_KEY_ID": "${localEnv:PELICAN_PROD_AWS_ACCESS_KEY_ID}",
		"PELICAN_PROD_AWS_ACCESS_SECRET_KEY": "${localEnv:PELICAN_PROD_AWS_ACCESS_SECRET_KEY}",
		"PELICAN_PROD_AWS_ENDPOINT": "${localEnv:PELICAN_PROD_AWS_ENDPOINT}",
		"PELICAN_PROD_AWS_BUCKET": "${localEnv:PELICAN_PROD_AWS_BUCKET}",
		"PELICAN_PROD_AWS_SUBFOLDER_NAME": "${localEnv:PELICAN_PROD_AWS_SUBFOLDER_NAME}",
		"PELICAN_PROD_AWS_REGION": "${localEnv:PELICAN_PROD_AWS_REGION}",

		"PELICAN_PROD_BACKUPS_SCHEDULE": "${localEnv:PELICAN_PROD_BACKUPS_SCHEDULE}",
		"PELICAN_PROD_S3_BACKUPS_FILENAME_PREFIX": "${localEnv:PELICAN_PROD_S3_BACKUPS_FILENAME_PREFIX}",
		"PELICAN_PROD_DB_BACKUPS_FILENAME_PREFIX": "${localEnv:PELICAN_PROD_DB_BACKUPS_FILENAME_PREFIX}",
		"PELICAN_PROD_BACKUPS_AWS_BUCKET": "${localEnv:PELICAN_PROD_BACKUPS_AWS_BUCKET}",

		"PELICAN_PROD_DATABASE_HOST": "${localEnv:PELICAN_PROD_DATABASE_HOST}",
		"PELICAN_PROD_DATABASE_PORT": "${localEnv:PELICAN_PROD_DATABASE_PORT}",
		"PELICAN_PROD_DATABASE_NAME": "${localEnv:PELICAN_PROD_DATABASE_NAME}",
		"PELICAN_PROD_DATABASE_USERNAME": "${localEnv:PELICAN_PROD_DATABASE_USERNAME}",
		"PELICAN_PROD_DATABASE_PASSWORD": "${localEnv:PELICAN_PROD_DATABASE_PASSWORD}",

		"PELICAN_PROD_APP_KEYS": "${localEnv:PELICAN_PROD_APP_KEYS}",
		"PELICAN_PROD_API_TOKEN_SALT": "${localEnv:PELICAN_PROD_API_TOKEN_SALT}",
		"PELICAN_PROD_ADMIN_JWT_SECRET": "${localEnv:PELICAN_PROD_ADMIN_JWT_SECRET}",
		"PELICAN_PROD_TRANSFER_TOKEN_SALT": "${localEnv:PELICAN_PROD_TRANSFER_TOKEN_SALT}",
		"PELICAN_PROD_JWT_SECRET": "${localEnv:PELICAN_PROD_JWT_SECRET}",
		"PELICAN_PROD_CMS_ALLOWED_IP_ADDRESSES_WHITELIST": "${localEnv:PELICAN_PROD_CMS_ALLOWED_IP_ADDRESSES_WHITELIST}",

		"PELICAN_PROD_PREVIEW_SECRET": "${localEnv:PELICAN_PROD_PREVIEW_SECRET}",

		"PELICAN_PROD_CSP_ENABLED": "${localEnv:PELICAN_PROD_CSP_ENABLED}",
		"PELICAN_PROD_CSP_SCRIPT_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_SCRIPT_SRC_URLS}",
		"PELICAN_PROD_CSP_IMG_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_IMG_SRC_URLS}",
		"PELICAN_PROD_CSP_FONT_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_FONT_SRC_URLS}",
		"PELICAN_PROD_CSP_MEDIA_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_MEDIA_SRC_URLS}",
		"PELICAN_PROD_CSP_FRAME_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_FRAME_SRC_URLS}",
		"PELICAN_PROD_CSP_CONNECT_SRC_URLS": "${localEnv:PELICAN_PROD_CSP_CONNECT_SRC_URLS}",

		"PELICAN_PROD_NEXT_PUBLIC_METRICS_ENABLED": "${localEnv:PELICAN_PROD_NEXT_PUBLIC_METRICS_ENABLED}",
   
		"PELICAN_PROD_INIT_ADMIN_USERNAME": "${localEnv:PELICAN_PROD_INIT_ADMIN_USERNAME}",
		"PELICAN_PROD_INIT_ADMIN_PASSWORD": "${localEnv:PELICAN_PROD_INIT_ADMIN_PASSWORD}",
		"PELICAN_PROD_INIT_ADMIN_FIRSTNAME": "${localEnv:PELICAN_PROD_INIT_ADMIN_FIRSTNAME}",
		"PELICAN_PROD_INIT_ADMIN_LASTNAME": "${localEnv:PELICAN_PROD_INIT_ADMIN_LASTNAME}",
		"PELICAN_PROD_INIT_ADMIN_EMAIL": "${localEnv:PELICAN_PROD_INIT_ADMIN_EMAIL}",

		"PELICAN_PROD_LETS_ENCRYPT_EMAIL": "${localEnv:PELICAN_PROD_LETS_ENCRYPT_EMAIL}"
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "docker --version",
	// Configure tool-specific properties.
	// "customizations": {},
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// this was needed for kind to be able to create the cluster https://github.com/kubernetes-sigs/kind/issues/3196
	"remoteUser": "root",
	// to be able to call host OS network services
	"runArgs": [
		"--network=host"
	],
	// this tells kind where to look for the default config
	"containerEnv": {
		"KUBECONFIG": "/workspaces/pelican-prod-env/.pelican-cluster-kubeconfig"
	},
	// this is to prevent the k8s cluster container from pausing when closing VSCode
	"shutdownAction": "none"
}